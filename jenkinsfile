pipeline {
    agent any

    parameters {
        string(name: 'DOCKER_IMAGE_TAG', defaultValue: 'latest', description: 'Docker image tag')
    }

    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }

        stage('Build and Push Docker Image') {
            steps {
                script {
                    def dockerImageTag = "nasi101/netflix:${params.DOCKER_IMAGE_TAG}"
                    docker.build(dockerImageTag).push()
                }
            }
        }

        stage('Deploy to Kubernetes') {
            steps {
                script {
                    def kubeManifest = readFile('your-kubernetes-manifest.yaml').replaceAll('\\$\\{DOCKER_IMAGE\\}', "nasi101/netflix:${params.DOCKER_IMAGE_TAG}")
                    writeFile file: 'deployed-manifest.yaml', text: kubeManifest
                    withCredentials([string(credentialsId: 'your-kubeconfig-credential-id', variable: 'KUBECONFIG')]) {
                        sh "kubectl apply -f deployed-manifest.yaml --kubeconfig=\$KUBECONFIG"
                    }
                }
            }
        }
    }

    post {
        always {
            // Cleanup steps if necessary
        }
    }
}
